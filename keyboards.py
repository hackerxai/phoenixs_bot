from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

def get_main_menu_keyboard():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.row(
        InlineKeyboardButton(text="üì¶ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ü–ö", callback_data="category_optimization"),
        width=1
    )
    keyboard.row(
        InlineKeyboardButton(text="üíª –ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ", callback_data="category_components"),
        InlineKeyboardButton(text="üñ± –î–µ–≤–∞–π—Å—ã", callback_data="category_devices"),
        width=2
    )

    keyboard.row(
        InlineKeyboardButton(text="üßæ –û –Ω–∞—Å", callback_data="category_about"),
        InlineKeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="category_contacts"),
        width=2
    )
    
    return keyboard.as_markup()

def get_category_keyboard(category_key: str, services: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É—Å–ª—É–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    keyboard = InlineKeyboardBuilder()
    
    for service in services:
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è
        service_name = service['name'][:50] + "..." if len(service['name']) > 50 else service['name']
        
        keyboard.row(
            InlineKeyboardButton(
                text=service_name,
                callback_data=f"service_{service['id']}"
            ),
            width=1
        )
    
    keyboard.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"),
        width=1
    )
    
    return keyboard.as_markup()

def get_service_keyboard(service_id: int, category_key: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —É—Å–ª—É–≥–∏"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.row(
        InlineKeyboardButton(text="üìÑ –ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data=f"details_{service_id}"),
        InlineKeyboardButton(text="‚úÖ –ó–∞–∫–∞–∑–∞—Ç—å", callback_data=f"order_{service_id}"),
        width=2
    )
    keyboard.row(
        InlineKeyboardButton(text="üîô –ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data=f"category_{category_key}"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"),
        width=2
    )
    
    return keyboard.as_markup()

def get_details_keyboard(service_id: int, category_key: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Å–ª—É–≥–µ"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.row(
        InlineKeyboardButton(text="‚úÖ –ó–∞–∫–∞–∑–∞—Ç—å", callback_data=f"order_{service_id}"),
        width=1
    )
    keyboard.row(
        InlineKeyboardButton(text="üîô –ö —É—Å–ª—É–≥–µ", callback_data=f"service_{service_id}"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"),
        width=2
    )
    
    return keyboard.as_markup()

def get_back_to_main_keyboard():
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"),
        width=1
    )
    
    return keyboard.as_markup()

def get_contact_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.row(
        InlineKeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É", url="https://t.me/phoen1xPC"),
        width=1
    )
    keyboard.row(
        InlineKeyboardButton(text="üì¢ –ù–∞—à –∫–∞–Ω–∞–ª", url="https://t.me/helprepairpc"),
        width=1
    )
    keyboard.row(
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"),
        width=1
    )
    
    return keyboard.as_markup()

def get_channel_post_keyboard():
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ—Å—Ç–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ"""
    keyboard = InlineKeyboardBuilder()
    
    keyboard.row(
        InlineKeyboardButton(text="üî• –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é", url="https://t.me/Phoen1xPC_bot?start=channel"),
        width=1
    )
    
    return keyboard.as_markup()