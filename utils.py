from typing import Optional
from config import CATEGORIES

def get_category_by_name(category_name: str) -> Optional[str]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
    for key, name in CATEGORIES.items():
        if name == category_name:
            return key
    return None

def format_service_message(service: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ª—É–≥–µ"""
    return f"""üíº **{service['name']}**

üí∞ **–¶–µ–Ω–∞:** {service['price']}

üìù **–û–ø–∏—Å–∞–Ω–∏–µ:**
{service['description']}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"""

def format_detailed_service_message(service: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ª—É–≥–µ"""
    return f"""üìÑ **–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**

üíº **–£—Å–ª—É–≥–∞:** {service['name']}
üí∞ **–¶–µ–Ω–∞:** {service['price']}
üìÇ **–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {service['category']}

üìù **–ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:**
{service['description']}

üî• **–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —É—Å–ª—É–≥—É:**
‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 7 –¥–Ω–µ–π –ø–æ—Å–ª–µ –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥–∏

‚ö° **–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:** –æ—Ç 1 –¥–æ 3 —á–∞—Å–æ–≤
üõ° **–ì–∞—Ä–∞–Ω—Ç–∏—è:** 30 –¥–Ω–µ–π

–ì–æ—Ç–æ–≤—ã –∑–∞–∫–∞–∑–∞—Ç—å? –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ! üëá"""

def truncate_text(text: str, max_length: int = 4000) -> str:
    """–û–±—Ä–µ–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã"""
    if len(text) <= max_length:
        return text
    return text[:max_length-3] + "..."

def escape_markdown(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è Markdown"""
    escape_chars = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!']
    for char in escape_chars:
        text = text.replace(char, f'\\{char}')
    return text

def format_username(username: Optional[str]) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ username –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    if not username:
        return "–ù–µ —É–∫–∞–∑–∞–Ω"
    return f"@{username}" if not username.startswith("@") else username