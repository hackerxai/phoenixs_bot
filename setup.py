#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Phoenix PS Bot
–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import logging
from database import init_db, db
from config import CATEGORIES

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
TEST_SERVICES = [
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ —Ä–∞–∑–≥–æ–Ω –ü–ö
    {
        "name": "‚ö° –ë–∞–∑–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows",
        "description": "–û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã –æ—Ç –º—É—Å–æ—Ä–∞, –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–Ω—É–∂–Ω—ã—Ö —Å–ª—É–∂–±, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
        "price": "1500 —Ä—É–±.",
        "category": "üì¶ –£—Å–ª—É–≥–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ —Ä–∞–∑–≥–æ–Ω—É –ü–ö"
    },
    {
        "name": "üî• –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Windows",
        "description": "–ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã: –æ—á–∏—Å—Ç–∫–∞ —Ä–µ–µ—Å—Ç—Ä–∞, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–≥—Ä, —É–¥–∞–ª–µ–Ω–∏–µ –≤–∏—Ä—É—Å–æ–≤.",
        "price": "2500 —Ä—É–±.",
        "category": "üì¶ –£—Å–ª—É–≥–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ —Ä–∞–∑–≥–æ–Ω—É –ü–ö"
    },
    {
        "name": "üåê –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–µ—Ç–µ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞",
        "description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è DNS, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ QoS.",
        "price": "1000 —Ä—É–±.",
        "category": "üì¶ –£—Å–ª—É–≥–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ —Ä–∞–∑–≥–æ–Ω—É –ü–ö"
    },
    {
        "name": "üöÄ –†–∞–∑–≥–æ–Ω CPU",
        "description": "–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–∞–∑–≥–æ–Ω –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ —Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–ª—å—Ç–∞–∂–∞ –∏ —á–∞—Å—Ç–æ—Ç.",
        "price": "2000 —Ä—É–±.",
        "category": "üì¶ –£—Å–ª—É–≥–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ —Ä–∞–∑–≥–æ–Ω—É –ü–ö"
    },
    {
        "name": "üéÆ –†–∞–∑–≥–æ–Ω GPU",
        "description": "–†–∞–∑–≥–æ–Ω –≤–∏–¥–µ–æ–∫–∞—Ä—Ç—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –ø–∞–º—è—Ç–∏ –∏ —è–¥—Ä–∞, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∏–≥—Ä–∞—Ö, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–æ–≤.",
        "price": "1800 —Ä—É–±.",
        "category": "üì¶ –£—Å–ª—É–≥–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ —Ä–∞–∑–≥–æ–Ω—É –ü–ö"
    },
    {
        "name": "üíæ –†–∞–∑–≥–æ–Ω RAM",
        "description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–∏–Ω–≥–æ–≤ –ø–∞–º—è—Ç–∏, —Ä–∞–∑–≥–æ–Ω —á–∞—Å—Ç–æ—Ç, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è XMP –ø—Ä–æ—Ñ–∏–ª–µ–π.",
        "price": "1200 —Ä—É–±.",
        "category": "üì¶ –£—Å–ª—É–≥–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ —Ä–∞–∑–≥–æ–Ω—É –ü–ö"
    },
    
    # –ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ
    {
        "name": "üíª –ü–æ–¥–±–æ—Ä –∏–≥—Ä–æ–≤–æ–π —Å–±–æ—Ä–∫–∏",
        "description": "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –≤—ã–±–æ—Ä—É –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏—Ö –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ü–ö —Å —É—á–µ—Ç–æ–º –±—é–¥–∂–µ—Ç–∞ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π.",
        "price": "800 —Ä—É–±.",
        "category": "üíª –ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ"
    },
    {
        "name": "üîß –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –∞–ø–≥—Ä–µ–π–¥—É",
        "description": "–ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π —Å–∏—Å—Ç–µ–º—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–ø–≥—Ä–µ–π–¥—É –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.",
        "price": "500 —Ä—É–±.",
        "category": "üíª –ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ"
    },
    
    # –î–µ–≤–∞–π—Å—ã
    {
        "name": "üñ± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–≥—Ä–æ–≤–æ–π –º—ã—à–∏",
        "description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ DPI, –∫–Ω–æ–ø–æ–∫, –º–∞–∫—Ä–æ—Å–æ–≤, –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è –∏–≥—Ä–æ–≤–æ–π –º—ã—à–∏ –ø–æ–¥ –≤–∞—à–∏ –∏–≥—Ä—ã.",
        "price": "400 —Ä—É–±.",
        "category": "üñ± –î–µ–≤–∞–π—Å—ã"
    },
    {
        "name": "‚å®Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã",
        "description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥—Å–≤–µ—Ç–∫–∏, –º–∞–∫—Ä–æ—Å–æ–≤, –ø—Ä–æ—Ñ–∏–ª–µ–π, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞–≤–∏—à –¥–ª—è –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.",
        "price": "350 —Ä—É–±.",
        "category": "üñ± –î–µ–≤–∞–π—Å—ã"
    },
    
    # –®–∫–æ–ª–∞
    {
        "name": "üéì –ö—É—Ä—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
        "description": "–û–±—É—á–∞—é—â–∏–π –∫—É—Ä—Å –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Windows: –æ—Ç –æ—Å–Ω–æ–≤ –¥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Ç–µ—Ö–Ω–∏–∫. 10 —É—Ä–æ–∫–æ–≤ —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π.",
        "price": "3000 —Ä—É–±.",
        "category": "üéì –®–∫–æ–ª–∞"
    },
    {
        "name": "üî• –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ä–∞–∑–≥–æ–Ω—É",
        "description": "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ä–∞–∑–≥–æ–Ω—É –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏—Ö —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –∑–∞–Ω—è—Ç–∏—è–º–∏ –∏ —Ç–µ–æ—Ä–∏–µ–π.",
        "price": "4500 —Ä—É–±.",
        "category": "üéì –®–∫–æ–ª–∞"
    }
]

async def setup_database():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Å–ª—É–≥"""
    try:
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        await init_db()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —É—Å–ª—É–≥–∏ –≤ –±–∞–∑–µ
        existing_services = await db.get_all_services()
        if existing_services:
            logger.info(f"–í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {len(existing_services)} —É—Å–ª—É–≥. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.")
            return
        
        logger.info("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Å–ª—É–≥...")
        for service in TEST_SERVICES:
            service_id = await db.add_service(
                service["name"],
                service["description"],
                service["price"],
                service["category"]
            )
            logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ª—É–≥–∞: {service['name']} (ID: {service_id})")
        
        logger.info(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {len(TEST_SERVICES)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Å–ª—É–≥!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        services = await db.get_all_services()
        logger.info(f"üìä –í—Å–µ–≥–æ —É—Å–ª—É–≥ –≤ –±–∞–∑–µ: {len(services)}")
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        categories = {}
        for service in services:
            cat = service['category']
            if cat not in categories:
                categories[cat] = 0
            categories[cat] += 1
        
        logger.info("üìÇ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
        for category, count in categories.items():
            logger.info(f"  ‚Ä¢ {category}: {count} —É—Å–ª—É–≥")
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        raise

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Phoenix PS Bot")
    print("=" * 40)
    
    try:
        await setup_database()
        print("\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ BOT_TOKEN –∏ ADMIN_ID")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main.py")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    exit_code = asyncio.run(main())
    exit(exit_code) 