#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è Phoenix PS Bot –Ω–∞ —Ä–∞–∑–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
"""

import os
import sys
import json
import subprocess
from pathlib import Path

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –¥–µ–ø–ª–æ—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –¥–µ–ø–ª–æ—è...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
    if not os.path.exists('.env'):
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º:")
        print("BOT_TOKEN=your_bot_token_here")
        print("ADMIN_ID=your_telegram_id_here")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if not os.path.exists('phoenix_bot.db'):
        print("‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É...")
        try:
            subprocess.run([sys.executable, 'setup.py'], check=True)
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")
        except subprocess.CalledProcessError:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
            return False
    
    print("‚úÖ –í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
    return True

def deploy_local():
    """–î–µ–ø–ª–æ–π –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"""
    print("\nüè† –î–µ–ø–ª–æ–π –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞")
    print("=" * 40)
    
    if not check_requirements():
        return False
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    try:
        subprocess.run([sys.executable, 'main.py'])
    except KeyboardInterrupt:
        print("\nüëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False
    
    return True

def deploy_replit():
    """–î–µ–ø–ª–æ–π –¥–ª—è Replit"""
    print("\n‚òÅÔ∏è –î–µ–ø–ª–æ–π –¥–ª—è Replit")
    print("=" * 40)
    
    # –°–æ–∑–¥–∞–µ–º .replit —Ñ–∞–π–ª
    replit_config = {
        "language": "python3",
        "run": "python main.py",
        "entrypoint": "main.py"
    }
    
    with open('.replit', 'w') as f:
        json.dump(replit_config, f, indent=2)
    
    # –°–æ–∑–¥–∞–µ–º pyproject.toml –¥–ª—è Replit
    pyproject_content = """[tool.poetry]
name = "phoenix-ps-bot"
version = "1.0.0"
description = "Telegram bot for Phoenix PS services"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = "^3.8"
aiogram = "^3.0.0"
aiosqlite = "^0.19.0"
python-dotenv = "^1.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
"""
    
    with open('pyproject.toml', 'w') as f:
        f.write(pyproject_content)
    
    print("‚úÖ –§–∞–π–ª—ã –¥–ª—è Replit —Å–æ–∑–¥–∞–Ω—ã")
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Replit:")
    print("1. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –Ω–∞ replit.com")
    print("2. –í—ã–±–µ—Ä–∏—Ç–µ Python")
    print("3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞")
    print("4. –í Secrets –¥–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
    print("   - BOT_TOKEN: –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
    print("   - ADMIN_ID: –≤–∞—à Telegram ID")
    print("5. –ù–∞–∂–º–∏—Ç–µ Run")
    
    return True

def deploy_railway():
    """–î–µ–ø–ª–æ–π –¥–ª—è Railway"""
    print("\nüöÇ –î–µ–ø–ª–æ–π –¥–ª—è Railway")
    print("=" * 40)
    
    # –°–æ–∑–¥–∞–µ–º Procfile –¥–ª—è Railway
    procfile_content = "worker: python main.py"
    
    with open('Procfile', 'w') as f:
        f.write(procfile_content)
    
    # –°–æ–∑–¥–∞–µ–º runtime.txt
    runtime_content = "python-3.11.0"
    
    with open('runtime.txt', 'w') as f:
        f.write(runtime_content)
    
    print("‚úÖ –§–∞–π–ª—ã –¥–ª—è Railway —Å–æ–∑–¥–∞–Ω—ã")
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Railway:")
    print("1. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ railway.app")
    print("2. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    print("3. –í Variables –¥–æ–±–∞–≤—å—Ç–µ:")
    print("   - BOT_TOKEN: –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
    print("   - ADMIN_ID: –≤–∞—à Telegram ID")
    print("4. Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–≤–µ—Ä–Ω–µ—Ç –±–æ—Ç–∞")
    
    return True

def deploy_heroku():
    """–î–µ–ø–ª–æ–π –¥–ª—è Heroku"""
    print("\nü¶∏ –î–µ–ø–ª–æ–π –¥–ª—è Heroku")
    print("=" * 40)
    
    # –°–æ–∑–¥–∞–µ–º Procfile –¥–ª—è Heroku
    procfile_content = "worker: python main.py"
    
    with open('Procfile', 'w') as f:
        f.write(procfile_content)
    
    # –°–æ–∑–¥–∞–µ–º runtime.txt
    runtime_content = "python-3.11.0"
    
    with open('runtime.txt', 'w') as f:
        f.write(runtime_content)
    
    # –°–æ–∑–¥–∞–µ–º app.json
    app_json = {
        "name": "Phoenix PS Bot",
        "description": "Telegram bot for Phoenix PS services",
        "repository": "https://github.com/yourusername/phoenix-ps-bot",
        "keywords": ["python", "telegram", "bot", "aiogram"],
        "env": {
            "BOT_TOKEN": {
                "description": "Telegram Bot Token from @BotFather",
                "required": True
            },
            "ADMIN_ID": {
                "description": "Your Telegram User ID",
                "required": True
            }
        },
        "buildpacks": [
            {
                "url": "heroku/python"
            }
        ]
    }
    
    with open('app.json', 'w') as f:
        json.dump(app_json, f, indent=2)
    
    print("‚úÖ –§–∞–π–ª—ã –¥–ª—è Heroku —Å–æ–∑–¥–∞–Ω—ã")
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è Heroku:")
    print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Heroku CLI")
    print("2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("   heroku login")
    print("   heroku create your-bot-name")
    print("   heroku config:set BOT_TOKEN=your_token")
    print("   heroku config:set ADMIN_ID=your_id")
    print("   git add .")
    print("   git commit -m 'Deploy to Heroku'")
    print("   git push heroku main")
    print("   heroku ps:scale worker=1")
    
    return True

def deploy_vps():
    """–î–µ–ø–ª–æ–π –¥–ª—è VPS"""
    print("\nüñ•Ô∏è –î–µ–ø–ª–æ–π –¥–ª—è VPS")
    print("=" * 40)
    
    # –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å
    service_content = """[Unit]
Description=Phoenix PS Bot
After=network.target

[Service]
Type=simple
User=root
WorkingDirectory=/root/phoenix-ps-bot
Environment=PATH=/root/phoenix-ps-bot/venv/bin
ExecStart=/root/phoenix-ps-bot/venv/bin/python main.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
"""
    
    with open('phoenix-bot.service', 'w') as f:
        f.write(service_content)
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    install_script = """#!/bin/bash
echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Phoenix PS Bot –Ω–∞ VPS..."

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
sudo apt update && sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∏ pip
sudo apt install python3 python3-pip python3-venv -y

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p /root/phoenix-ps-bot
cd /root/phoenix-ps-bot

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
python3 -m venv venv
source venv/bin/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
pip install -r requirements.txt

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
python setup.py

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
sudo cp phoenix-bot.service /etc/systemd/system/
sudo systemctl daemon-reload
sudo systemctl enable phoenix-bot
sudo systemctl start phoenix-bot

echo "‚úÖ –ë–æ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
echo "üìã –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "  sudo systemctl status phoenix-bot  # –°—Ç–∞—Ç—É—Å"
echo "  sudo systemctl restart phoenix-bot  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "  sudo systemctl stop phoenix-bot     # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo "  sudo journalctl -u phoenix-bot -f   # –õ–æ–≥–∏"
"""
    
    with open('install_vps.sh', 'w') as f:
        f.write(install_script)
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
    os.chmod('install_vps.sh', 0o755)
    
    print("‚úÖ –§–∞–π–ª—ã –¥–ª—è VPS —Å–æ–∑–¥–∞–Ω—ã")
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è VPS:")
    print("1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –Ω–∞ VPS")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏")
    print("3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: chmod +x install_vps.sh")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./install_vps.sh")
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –î–µ–ø–ª–æ–π Phoenix PS Bot")
    print("=" * 50)
    
    if len(sys.argv) < 2:
        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:")
        print("  local    - –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫")
        print("  replit   - Replit.com")
        print("  railway  - Railway.app")
        print("  heroku   - Heroku.com")
        print("  vps      - VPS —Å–µ—Ä–≤–µ—Ä")
        print("\nüí° –ü—Ä–∏–º–µ—Ä: python deploy.py local")
        return 1
    
    platform = sys.argv[1].lower()
    
    if platform == "local":
        return 0 if deploy_local() else 1
    elif platform == "replit":
        return 0 if deploy_replit() else 1
    elif platform == "railway":
        return 0 if deploy_railway() else 1
    elif platform == "heroku":
        return 0 if deploy_heroku() else 1
    elif platform == "vps":
        return 0 if deploy_vps() else 1
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: {platform}")
        return 1

if __name__ == "__main__":
    exit(main()) 